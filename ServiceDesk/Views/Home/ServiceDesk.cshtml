@{
    ViewData["Title"] = "ServiceDesk";
}

<h1>@ViewData["Title"]</h1>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Service Desk</title>
    <style>
        /* Стили остаются без изменений */
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 0;
        }

        header {
            background-color: #0078d7;
            color: #fff;
            padding: 10px 20px;
            text-align: center;
        }

        .container {
            margin: 20px auto;
            padding: 20px;
            max-width: 800px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .form-group {
            margin-bottom: 15px;
        }

            .form-group label {
                display: block;
                margin-bottom: 5px;
                font-weight: bold;
            }

            .form-group input {
                width: 100%;
                padding: 8px;
                box-sizing: border-box;
                border: 1px solid #ccc;
                border-radius: 4px;
            }

        button {
            background-color: #0078d7;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            button:hover {
                background-color: #005bb5;
            }
    </style>
</head>
<body>
    <header>
        <h1>Service Desk</h1>
    </header>
    <div class="container">
        <h2>Поиск изображения по имени</h2>
        <form id="searchForm">
            <div class="form-group">
                <label for="searchName">Введите имя</label>
                <input type="text" id="searchName" name="searchName" required>
            </div>
            <button type="submit">Искать</button>
        </form>
        <div id="searchResults" style="margin-top: 20px;">
            <!-- Здесь будут отображаться результаты поиска -->
        </div>

        <h2>Список всех файлов</h2>
        <button id="listFilesButton">Показать список файлов</button>
        <div id="fileList" style="margin-top: 20px;">
            <!-- Здесь будет отображаться список файлов -->
        </div>

        <h2>Загрузить изображение</h2>
        <form id="uploadForm" enctype="multipart/form-data">
            <div class="form-group">
                <label for="name">Имя</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="image">Выберите изображение</label>
                <input type="file" id="image" name="image" accept="image/*" required>
            </div>
            <button type="submit">Загрузить</button>
        </form>

        <h2>Получить изображение</h2>
        <form id="viewForm">
            <div class="form-group">
                <label for="imageId">ID изображения</label>
                <input type="number" id="imageId" name="imageId" required>
            </div>
            <button type="submit">Показать</button>
        </form>
        <div id="imagePreview" style="margin-top: 20px;">
            <!-- Здесь будет отображаться изображение -->
        </div>

    </div>

    <script>
        const uploadForm = document.getElementById('uploadForm');
        const viewForm = document.getElementById('viewForm');
        const imagePreview = document.getElementById('imagePreview');
        const searchForm = document.getElementById('searchForm');
        const listFilesButton = document.getElementById('listFilesButton');
        const searchResults = document.getElementById('searchResults');
        const fileList = document.getElementById('fileList');

        // Загрузка изображения
        uploadForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(uploadForm);

            const response = await fetch('/api/images/upload', {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                alert('Изображение загружено!');
                uploadForm.reset();
            } else {
                alert('Ошибка при загрузке изображения.');
            }
        });

        // Получение изображения
        viewForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const imageId = document.getElementById('imageId').value;

            const response = await fetch(`/api/images/${imageId}`);
            if (response.ok) {
                const blob = await response.blob();
                const url = URL.createObjectURL(blob);

                imagePreview.innerHTML = `<img src="${url}" alt="Изображение" style="max-width: 100%; border: 1px solid #ccc; border-radius: 4px;">`;
            } else {
                alert('Изображение не найдено.');
            }
        });

        // Поиск изображения по имени
        searchForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const searchName = document.getElementById('searchName').value;

            const response = await fetch(`/api/images/search?name=${encodeURIComponent(searchName)}`);
            if (response.ok) {
                const results = await response.json();
                searchResults.innerHTML = results.map(result => `
                                <div>
                                    <strong>ID:</strong> ${result.id} - <strong>Имя:</strong> ${result.name}
                                </div>
                            `).join('');
            } else {
                searchResults.innerHTML = '<p>Изображения с таким именем не найдены.</p>';
            }
        });

        // Получение списка всех файлов
        listFilesButton.addEventListener('click', async () => {
            const response = await fetch('/api/images/list');
            if (response.ok) {
                const files = await response.json();
                fileList.innerHTML = files.map(file => `
                                <div>
                                    <strong>ID:</strong> ${file.id} - <strong>Имя:</strong> ${file.name}
                                </div>
                            `).join('');
            } else {
                fileList.innerHTML = '<p>Список файлов недоступен.</p>';
            }
        });
    </script>
</body>
